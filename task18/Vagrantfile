MACHINES = {
  :router => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "vlan255"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "vlan1"},
                ]
  },
  :office1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "vlan1"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "vlan2"},
                   {ip: '10.1.0.2', adapter: 4, netmask: "255.255.255.0", virtualbox__intnet: "office1"}
                ]
  },
  :office2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "vlan255"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "vlan2"},
                   {ip: '10.2.0.2', adapter: 4, netmask: "255.255.255.0", virtualbox__intnet: "office2"}
                ]
  },
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
          echo net.ipv4.conf.all.forwarding=1 >> /etc/sysctl.d/99-sysctl.conf
          echo net.ipv4.conf.all.rp_filter=0 >> /etc/sysctl.conf
          setenforce 0
          yum install -y nano traceroute quagga
          cp /vagrant/daemons /etc/quagga/daemons
          systemctl enable zebra
          systemctl enable ospfd
          systemctl restart network
        SHELL
        
        case boxname.to_s
        when "router"
	  box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "512"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            iptables-save > /etc/firewall.conf
	    echo "/sbin/iptables-restore < /etc/firewall.conf" >> /etc/rc.d/rc.local && chmod +x /etc/rc.d/rc.local
            SHELL
	when "office1"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    echo "/sbin/iptables-restore < /etc/firewall.conf" >> /etc/rc.d/rc.local && chmod +x /etc/rc.d/rc.local
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
          SHELL
	when "office2"
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", "256"]
          end
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "/sbin/iptables-restore < /etc/firewall.conf" >> /etc/rc.d/rc.local && chmod +x /etc/rc.d/rc.local
	    echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
          SHELL
        end
      end
  end
end
